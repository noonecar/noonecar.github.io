日常本地开发流程

切换到 dev 分支：git checkout dev

编写内容/修改样式：编辑你的 Markdown 文件（Posts/Pages）、CSS (Sass) 或布局文件。

本地预览：bundle exec jekyll serve

保存并提交更改：git add . 和 git commit -m "Add new post about X / Fix typo / etc."

（可选）推送到 GitHub 的 dev 分支：git push origin dev （如果你希望备份本地开发进度）

部署到 GitHub Pages

确保 dev 分支的更改已提交：git status 检查，git add . 和 git commit -m "..." 提交。

切换到 main 分支：git checkout main

合并 dev 分支的更改：git merge dev

这会将你在 dev 分支上做的所有内容和样式修改合并到 main 分支。

在 main 分支上配置 GitHub Pages 部署：

修改 _config.yml：添加 remote_theme 配置，并确保 plugins 中包含 jekyll-remote-theme。

remote_theme: mmistakes/minimal-mistakes

plugins:
  - jekyll-remote-theme # 必须包含这个插件

（关键）移除本地主题文件：在 main 分支上，必须不存在 _layouts, _includes, _sass, assets 这些本地主题文件夹。GitHub Pages 会根据 remote_theme 自动下载 Minimal Mistakes 主题。

修改 Gemfile：确保 Gemfile 中包含 gem "jekyll-remote-theme"。